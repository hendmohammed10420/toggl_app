<div id="<%= dom_id task %>">
<div class="card  bg-light mt-5" style="max-width: 30em;">
<div class="card-header"><%= task.name %></div>
<div class="card-body">
<%= task.body %>

   <div class="d-flex justify-content-start mt-5">
        <button class="start btn btn-success me-2" style=" height: 36px; width: 70px;" data-task-id="<%= task.id %>" data-initial-time="<%= task.elapsed || 0 %>">Start </button>    
        <button class="stop btn btn-secondary me-2" style=" height: 36px; width: 70px;" data-task-id="<%= task.id %>" disabled>Stop </button>
        <%= button_to "Delete", "/tasks/#{task.id}", method: :delete, data: { confirm: "Are you sure?" }, class: "btn btn-danger me-2" %>
        <%= button_to "Edit", edit_task_path(task), method: :get,class: "btn btn-primary me-2" %>
    </div>

      <div class="timer mt-4">
            <span class="text-muted mb-1 ms-2">  Time elapsed: </span>
            <span id="elapsed-time-<%= task.id %>"><%= task.elapsed %></span> seconds
       </div>
 
  </div>
 </div>

</div>


<script>
var currentTimerId = null;
  var timers = {};
  var elapsedTimes = {};

   function stopTimer(taskId) {
    if (!timers[taskId]) {
      return;
    }

    clearInterval(timers[taskId]);
    var startButton = document.querySelector("button.start[data-task-id='" + taskId + "']");
    startButton.disabled = false;
    var stopButton = document.querySelector("button.stop[data-task-id='" + taskId + "']");
    stopButton.disabled = true;

    var elapsedTime = elapsedTimes[taskId];
    var taskEl = document.getElementById("elapsed-time-" + taskId);
    taskEl.textContent = elapsedTime;

    var csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute("content");
    var url = "/tasks/" + taskId;

    fetch(url, {
      method: "PATCH",
      headers: {
        "Content-Type": "application/json",
        "X-CSRF-Token": csrfToken
      },
    body: JSON.stringify({ task: { elapsed: elapsedTime } })
   })
    .then(function(response) {
      if (response.ok) {
        console.log("Time elapsed updated successfully!");
      } else {
        console.error("Failed to update time elapsed.");
      }
    })
    .catch(function(error) {
      console.error("Failed to update time elapsed:", error);
    });

    currentTimerId = null;
  }

  document.querySelectorAll(".start").forEach(function(startButton) {
    var taskId = startButton.dataset.taskId;
    var initialTime = startButton.dataset.initialTime;

    startButton.addEventListener("click", function() {
      if (currentTimerId) {
        stopTimer(currentTimerId);
      }

      elapsedTimes[taskId] = parseInt(document.getElementById("elapsed-time-" + taskId).textContent || initialTime);
     
    //  timers[taskId] = setInterval(function() {
    //     elapsedTimes[taskId]++;
    //           console.log(`Task elapsed times: ${elapsedTimes[taskId]}`);

    //     document.getElementById("elapsed-time-" + taskId).textContent = elapsedTimes[taskId];

    //     var stopButton = document.querySelector("button.stop[data-task-id='" + taskId + "']");
    //     stopButton.disabled = false;
    //   }, 1000);
    timers[taskId] = setInterval(function() {
  elapsedTimes[taskId]++;
  var hours = Math.floor(elapsedTimes[taskId] / 3600);
  var minutes = Math.floor((elapsedTimes[taskId] % 3600) / 60);
  var seconds = elapsedTimes[taskId] % 60;
  var formattedTime = ("0" + hours).slice(-2) + ":" + ("0" + minutes).slice(-2) + ":" + ("0" + seconds).slice(-2);
  document.getElementById("elapsed-time-" + taskId).textContent = formattedTime;
  var stopButton = document.querySelector("button.stop[data-task-id='" + taskId + "']");
  stopButton.disabled = false;
}, 1000);

      startButton.disabled = true;
      currentTimerId = taskId;
    });

    var stopButton = startButton.nextElementSibling;
    stopButton.addEventListener("click", function() {
      stopTimer(taskId);
    });
  });
</script>